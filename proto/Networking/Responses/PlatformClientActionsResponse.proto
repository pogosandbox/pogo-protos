syntax = "proto3";
package POGOProtos.Networking.Responses;

import "POGOProtos/Data/Login/LoginDetail.proto";
import "POGOProtos/Enums/NotificationState.proto";

message RegisterPushNotificationResponse {
	Result result = 1;

	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_CHANGE = 2;
	}
}

message UpdateNotificationStatusResponse {
	repeated string notification_ids = 1;
	repeated int64 create_timestamp_ms = 2;
	.POGOProtos.Enums.NotificationState state = 3;
}

message OptOutPushNotificationCategoryResponse {
	//
}

message RedeemPasscodeResponse {
	Result result = 1;
	repeated AcquiredItem acquired_item = 2;
	bytes acquired_items_proto = 3;
	string passcode = 4;

	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NOT_AVAILABLE = 2;
		OVER_INVENTORY_LIMIT = 3;
		ALREADY_REDEEMED = 4;
		OVER_PLAYER_REDEMPTION_LIMIT = 5;
	}

	message AcquiredItem {
		string item = 1;
		int64 count = 2;
	}
}

message AddNewPoiResponse {
	Status status = 1;
	repeated string message = 2;

	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		INTERNAL_ERROR = 3;
		TOO_MANY_RECENT_SUBMISSIONS = 4;
		INVALID_INPUT = 5;
	}
}

message ProxySocialActionResponse {
	Status status = 1;
	string assigned_host = 2;
	bytes payload = 3;

	enum Status {
		UNSET = 0;
		COMPLETED = 1;
		COMPLETED_AND_REASSIGNED = 2;
		ACTION_NOT_FOUND = 3;
		ASSIGNMENT_ERROR = 4;
		PROXY_UNAUTHORIZED_ERROR = 5;
		INTERNAL_ERROR = 6;
		BAD_REQUEST = 7;
		ACCESS_DENIED = 8;
		TIMEOUT_ERROR = 9;
		RATE_LIMITED = 10;
	}
}

message ProxySocialSideChannelActionResponse {
	Status status = 1;
	string assigned_host = 2;
	bytes payload = 3;

	enum Status {
		UNSET = 0;
		COMPLETED = 1;
		COMPLETED_AND_REASSIGNED = 2;
		ACTION_NOT_FOUND = 3;
		ASSIGNMENT_ERROR = 4;
		PROXY_UNAUTHORIZED_ERROR = 5;
		INTERNAL_ERROR = 6;
		BAD_REQUEST = 7;
		ACCESS_DENIED = 8;
		TIMEOUT_ERROR = 9;
		RATE_LIMITED = 10;
	}
}

message GetAvailableSubmissionsResponse {
	int32 submissions_left = 1;
	int32 min_player_level = 2;
	bool has_valid_email = 3;
	bool is_feature_enabled = 4;
	int64 time_window_for_submissions_limit_ms = 5;
}

message PushNotificationRegistryResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_CHANGE = 2;
	}

	Result result = 1;
}

message AddLoginActionResponse {
	bool success = 1;
	repeated .POGOProtos.Data.Login.LoginDetail login_detail = 2;
	Status status = 3;

	enum Status {
		UNSET = 0;
		AUTH_FAILURE = 1;
		LOGIN_TAKEN = 2;
	}
}

message RemoveLoginActionResponse {
	bool success = 1;
	repeated .POGOProtos.Data.Login.LoginDetail login_detail = 2;
	Status status = 3;

	enum Status {
		UNSET = 0;
		LOGIN_NOT_REMOVABLE = 1;
	}
}

message SubmitNewPoiResponse {
	Status status = 1;

	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		INTERNAL_ERROR = 3;
		TOO_MANY_RECENT_SUBMISSIONS = 4;
		INVALID_INPUT = 5;
		MINOR = 6;
		NOT_AVAILABLE = 7;
	}
}

message UploadPoiPhotoByUrlResponse {
	Result status = 1;

	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FEATURE_DISABLED = 2;
		ALREADY_UPLOADED = 3;
		IMAGE_NOT_FOUND = 4;
		IMAGE_TOO_BIG = 5;
		IMAGE_NOT_SERVABLE = 6;
		PORTAL_NOT_FOUND = 7;
	}
}

message PingResponse {
	string user_info = 1;
	string server_info = 2;
	string random_response_bytes = 3;
	string return_value = 4;
}

message ReplaceLoginActionResponse {
	bool success = 1;
	repeated POGOProtos.Data.Login.LoginDetail login_detail = 2;
	Status status = 3;

	enum Status {
		UNSET = 0;
		AUTH_FAILURE = 1;
		LOGIN_TAKEN = 2;
		LOGIN_ALREADY_HAVE = 3;
		LOGIN_NOT_REPLACEABLE = 4;
	}
}

message ListLoginActionResponse {
	bool success = 1;
	repeated .POGOProtos.Data.Login.LoginDetail login_detail = 2;
}
